{"version":3,"sources":["../../src/LoginSocialAmazon/index.tsx","../../src/LoginSocialFacebook/index.tsx","../../src/LoginSocialGoogle/index.tsx","../../src/LoginSocialGithub/index.tsx","../../src/LoginSocialInstagram/index.tsx","../../src/LoginSocialMicrosoft/index.tsx","../../src/LoginSocialLinkedin/index.tsx","App.tsx","index.tsx"],"names":["_window","LoginSocialAmazon","memo","state","client_id","className","redirect_uri","scope","scope_data","profile","essential","response_type","children","onReject","onResolve","useState","isSdkLoaded","setIsSdkLoaded","isProcessing","setIsProcessing","useEffect","load","checkIsExistsSDKScript","useCallback","document","insertScriptGoogle","s","ggScriptTag","d","scriptNode","handleResponse","provider","data","res","handleError","onLogin","onClick","LoginSocialFacebook","appId","xfbml","cookie","version","language","auth_type","fieldsProfile","return_scopes","insertSDKScript","fbScriptTag","cb","initFbSDK","fbRoot","getMe","locale","fields","response","loginFB","LoginSocialGoogle","prompt","ux_mode","login_hint","access_type","cookie_policy","hosted_domain","discoveryDocs","fetch_basic_profile","params","immediate","gapiAuth","loginGoogle","auth2","options","LoginSocialGithub","client_secret","allow_signup","window","code","URL","popupWindowURL","type","getProfile","fetch","PREVENT_CORS_URL","method","headers","Authorization","access_token","getAccessToken","Headers","body","URLSearchParams","p","handlePostMessage","console","event","oauthUrl","GITHUB_URL","left","width","top","height","LoginSocialInstagram","grant_type","INSTAGRAM_URL","LoginSocialMicrosoft","tenant","response_mode","code_challenge","code_challenge_method","MICROSOFT_API_URL","code_verifier","MICROSOFT_URL","LoginSocialLinkedin","LINKEDIN_URL","REDIRECT_URI","App","log","process","FB_APP_ID","GG_APP_ID","AMAZON_APP_ID","err","INSTAGRAM_APP_ID","INSTAGRAM_APP_SECRET","MICROSOFT_APP_ID","LINKEDIN_APP_ID","LINKEDIN_APP_SECRET","GITHUB_APP_ID","GITHUB_APP_SECRET","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4158809b.chunk.js","sourcesContent":["/**\n *\n * LoginSocialAmazon\n *\n */\nimport React, { memo, useEffect, useState, useCallback } from 'react'\nimport { IResolveParams, objectType } from '../'\n\ninterface Props {\n  scope?: string\n  state?: string\n  client_id: string\n  className?: string\n  redirect_uri?: string\n  response_type?: string\n  scope_data?: objectType\n  children?: React.ReactNode\n  onReject: (reject: string | objectType) => void\n  onResolve: ({ provider, data }: IResolveParams) => void\n}\n\nconst JS_SRC = 'https://assets.loginwithamazon.com/sdk/na/login1.js'\nconst SCRIPT_ID = 'amazon-login'\nconst _window = window as any\n\nexport const LoginSocialAmazon = memo(\n  ({\n    state = 'DCEeFWf45A53sdfKef424',\n    client_id,\n    className,\n    redirect_uri,\n    scope = 'profile',\n    scope_data = {\n      profile: { essential: false }\n    },\n    response_type = 'token',\n    children,\n    onReject,\n    onResolve\n  }: Props) => {\n    const [isSdkLoaded, setIsSdkLoaded] = useState(false)\n    const [isProcessing, setIsProcessing] = useState(false)\n\n    useEffect(() => {\n      !isSdkLoaded && load()\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isSdkLoaded])\n\n    const checkIsExistsSDKScript = useCallback(() => {\n      return !!document.getElementById(SCRIPT_ID)\n    }, [])\n\n    const insertScriptGoogle = useCallback(\n      (\n        d: HTMLDocument,\n        s: string = 'script',\n        id: string,\n        jsSrc: string,\n        cb: () => void\n      ) => {\n        const ggScriptTag: any = d.createElement(s)\n        ggScriptTag.id = id\n        ggScriptTag.src = jsSrc\n        ggScriptTag.async = true\n        ggScriptTag.defer = true\n        const scriptNode = document.getElementsByTagName('script')![0]\n        scriptNode &&\n          scriptNode.parentNode &&\n          scriptNode.parentNode.insertBefore(ggScriptTag, scriptNode)\n        ggScriptTag.onload = cb\n      },\n      []\n    )\n\n    const handleResponse = useCallback(\n      (res: objectType) => {\n        setIsProcessing(false)\n        onResolve({ provider: 'amazon', data: res })\n      },\n      [onResolve]\n    )\n\n    const handleError = useCallback(\n      (err: objectType | string) => {\n        setIsProcessing(false)\n        onReject(err)\n      },\n      [onReject]\n    )\n\n    const load = useCallback(() => {\n      if (checkIsExistsSDKScript()) {\n        setIsSdkLoaded(true)\n      } else {\n        insertScriptGoogle(document, 'script', SCRIPT_ID, JS_SRC, () => {\n          _window.amazon.Login.setClientId(client_id)\n          setIsSdkLoaded(true)\n        })\n      }\n    }, [checkIsExistsSDKScript, client_id, insertScriptGoogle])\n\n    const onLogin = useCallback(() => {\n      if (isProcessing || !isSdkLoaded) return\n      setIsProcessing(true)\n      if (!_window.amazon) {\n        setIsProcessing(false)\n        load()\n        onReject(\"Google SDK isn't loaded!\")\n      } else {\n        _window.amazon.Login.authorize(\n          { scope, scope_data, response_type, redirect_uri, state },\n          (res: objectType) => {\n            if (res.error) handleError(res.error)\n            else handleResponse(res)\n          }\n        )\n      }\n    }, [\n      load,\n      state,\n      scope,\n      onReject,\n      scope_data,\n      isSdkLoaded,\n      handleError,\n      redirect_uri,\n      isProcessing,\n      response_type,\n      handleResponse\n    ])\n\n    return (\n      <div className={className} onClick={onLogin}>\n        {children}\n      </div>\n    )\n  }\n)\n\nexport default LoginSocialAmazon\n","/**\n *\n * LoginSocialFacebook\n *\n */\nimport React, { memo, useCallback, useEffect, useState } from 'react'\nimport { objectType, IResolveParams } from '../'\n\ninterface Props {\n  appId: string\n  scope?: string\n  state?: boolean\n  xfbml?: boolean\n  cookie?: boolean\n  version?: string\n  language?: string\n  auth_type?: string\n  className?: string\n  isDisabled?: boolean\n  onReject: (reject: string | objectType) => void\n  onResolve: ({ provider, data }: IResolveParams) => void\n  redirect_uri?: string\n  fieldsProfile?: string\n  response_type?: string\n  return_scopes?: boolean\n  children?: React.ReactNode\n}\n\nconst SDK_URL: string = 'https://connect.facebook.net/en_EN/sdk.js'\nconst SCRIPT_ID: string = 'facebook-jssdk'\nconst _window = window as any\n\nconst LoginSocialFacebook = memo(\n  ({\n    appId,\n    scope = 'email,public_profile',\n    state = true,\n    xfbml = true,\n    cookie = true,\n    version = 'v2.7',\n    language = 'en_EN',\n    auth_type = '',\n    className,\n    onReject,\n    onResolve,\n    redirect_uri,\n    fieldsProfile = 'name, email, birthday',\n    response_type = 'code',\n    return_scopes = true,\n    children\n  }: Props) => {\n    const [isSdkLoaded, setIsSdkLoaded] = useState(false)\n    const [isProcessing, setIsProcessing] = useState(false)\n\n    useEffect(() => {\n      !isSdkLoaded && load()\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isSdkLoaded])\n\n    const insertSDKScript = useCallback(\n      (document: HTMLDocument, cb: () => void) => {\n        const fbScriptTag = document.createElement('script')\n        fbScriptTag.id = SCRIPT_ID\n        fbScriptTag.src = SDK_URL\n        const scriptNode = document.getElementsByTagName('script')![0]\n        scriptNode &&\n          scriptNode.parentNode &&\n          scriptNode.parentNode.insertBefore(fbScriptTag, scriptNode)\n        cb()\n      },\n      []\n    )\n\n    const checkIsExistsSDKScript = useCallback(() => {\n      return !!document.getElementById(SCRIPT_ID)\n    }, [])\n\n    const initFbSDK = useCallback(\n      (config: objectType, document: HTMLDocument) => {\n        const _window = window as any\n        _window.fbAsyncInit = function () {\n          _window.FB && _window.FB.init({ ...config })\n          setIsSdkLoaded(true)\n          let fbRoot = document.getElementById('fb-root')\n          if (!fbRoot) {\n            fbRoot = document.createElement('div')\n            fbRoot.id = 'fb-root'\n            document.body.appendChild(fbRoot)\n          }\n        }\n      },\n      []\n    )\n\n    const getMe = useCallback(\n      (authResponse: objectType) => {\n        _window.FB.api(\n          '/me',\n          { locale: language, fields: fieldsProfile },\n          (me: any) => {\n            onResolve({\n              provider: 'facebook',\n              data: { ...authResponse, ...me }\n            })\n          }\n        )\n      },\n      [fieldsProfile, language, onResolve]\n    )\n\n    const handleResponse = useCallback(\n      (response: objectType) => {\n        if (response.authResponse) {\n          getMe(response.authResponse)\n        } else {\n          onReject(response)\n        }\n        setIsProcessing(false)\n      },\n      [getMe, onReject]\n    )\n\n    const load = useCallback(() => {\n      if (checkIsExistsSDKScript()) {\n        setIsSdkLoaded(true)\n      } else {\n        insertSDKScript(document, () => {\n          initFbSDK(\n            {\n              appId,\n              xfbml,\n              version,\n              state,\n              cookie,\n              redirect_uri,\n              response_type\n            },\n            document\n          )\n        })\n      }\n    }, [\n      state,\n      appId,\n      xfbml,\n      cookie,\n      version,\n      initFbSDK,\n      redirect_uri,\n      response_type,\n      insertSDKScript,\n      checkIsExistsSDKScript\n    ])\n\n    const loginFB = useCallback(() => {\n      if (isProcessing || !isSdkLoaded) return\n      setIsProcessing(true)\n      if (!_window.FB) {\n        setIsProcessing(false)\n        load()\n        onReject(\"Fb isn't loaded!\")\n      } else {\n        _window.FB.login(handleResponse, {\n          scope,\n          return_scopes,\n          auth_type\n        })\n      }\n    }, [\n      load,\n      scope,\n      onReject,\n      auth_type,\n      isSdkLoaded,\n      isProcessing,\n      return_scopes,\n      handleResponse\n    ])\n\n    return (\n      <div className={className} onClick={loginFB}>\n        {children}\n      </div>\n    )\n  }\n)\n\nexport default LoginSocialFacebook\n","/**\n *\n * LoginSocialGoogle\n *\n */\nimport React, { memo, useCallback, useEffect, useState } from 'react'\nimport { objectType, IResolveParams } from '../'\n\ninterface Props {\n  scope?: string\n  prompt?: string\n  ux_mode?: string\n  client_id: string\n  className?: string\n  login_hint?: string\n  access_type?: string\n  redirect_uri?: string\n  cookie_policy?: string\n  hosted_domain?: string\n  discoveryDocs?: string\n  children?: React.ReactNode\n  onReject: (reject: string | objectType) => void\n  fetch_basic_profile?: boolean\n  onResolve: ({ provider, data }: IResolveParams) => void\n}\n\nconst SCOPE = ''\nconst JS_SRC = 'https://apis.google.com/js/api.js'\nconst SCRIPT_ID = 'google-login'\nconst _window = window as any\n\nconst LoginSocialGoogle = memo(\n  ({\n    client_id,\n    scope = 'email profile',\n    prompt = 'select_account',\n    ux_mode,\n    className = '',\n    login_hint = '',\n    access_type = 'online',\n    onReject,\n    onResolve,\n    redirect_uri = '/',\n    cookie_policy = 'single_host_origin',\n    hosted_domain = '',\n    discoveryDocs = '',\n    children,\n    fetch_basic_profile = true\n  }: Props) => {\n    const [isSdkLoaded, setIsSdkLoaded] = useState(false)\n    const [isProcessing, setIsProcessing] = useState(false)\n\n    useEffect(() => {\n      !isSdkLoaded && load()\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isSdkLoaded])\n\n    const checkIsExistsSDKScript = useCallback(() => {\n      return !!document.getElementById(SCRIPT_ID)\n    }, [])\n\n    const insertScriptGoogle = useCallback(\n      (\n        d: HTMLDocument,\n        s: string = 'script',\n        id: string,\n        jsSrc: string,\n        cb: () => void\n      ) => {\n        const ggScriptTag: any = d.createElement(s)\n        ggScriptTag.id = id\n        ggScriptTag.src = jsSrc\n        ggScriptTag.async = true\n        ggScriptTag.defer = true\n        const scriptNode = document.getElementsByTagName('script')![0]\n        scriptNode &&\n          scriptNode.parentNode &&\n          scriptNode.parentNode.insertBefore(ggScriptTag, scriptNode)\n        ggScriptTag.onload = cb\n      },\n      []\n    )\n\n    const handleResponse = useCallback(\n      (res: objectType) => {\n        setIsProcessing(false)\n        // const auth2 = _window.gapi.auth2.getAuthInstance();\n        // var user = auth2.currentUser.get();\n        // var auth = user.getAuthResponse();\n        onResolve({ provider: 'google', data: res })\n      },\n      [onResolve]\n    )\n\n    const handleError = useCallback(\n      (err: objectType | string) => {\n        setIsProcessing(false)\n        onReject(err)\n      },\n      [onReject]\n    )\n\n    const load = useCallback(() => {\n      if (checkIsExistsSDKScript()) {\n        setIsSdkLoaded(true)\n      } else {\n        insertScriptGoogle(document, 'script', SCRIPT_ID, JS_SRC, () => {\n          const params = {\n            client_id,\n            cookie_policy,\n            login_hint,\n            hosted_domain,\n            fetch_basic_profile,\n            discoveryDocs,\n            ux_mode,\n            redirect_uri,\n            access_type,\n            scope: SCOPE,\n            immediate: true\n          }\n          _window.gapi.load('auth2', () => {\n            const gapiAuth = _window.gapi.auth2\n            !gapiAuth.getAuthInstance()\n              ? gapiAuth.init(params).then(() => {\n                  setIsSdkLoaded(true)\n                })\n              : onReject('not exist an instance')\n          })\n        })\n      }\n    }, [\n      ux_mode,\n      onReject,\n      client_id,\n      login_hint,\n      access_type,\n      redirect_uri,\n      discoveryDocs,\n      cookie_policy,\n      hosted_domain,\n      insertScriptGoogle,\n      fetch_basic_profile,\n      checkIsExistsSDKScript\n    ])\n\n    const loginGoogle = useCallback(() => {\n      if (isProcessing || !isSdkLoaded) return\n      setIsProcessing(true)\n      if (!_window.gapi) {\n        setIsProcessing(false)\n        load()\n        onReject(\"Google SDK isn't loaded!\")\n      } else {\n        const auth2 = _window.gapi.auth2.getAuthInstance()\n        const options = {\n          prompt,\n          scope,\n          ux_mode\n        }\n        // auth2.grantOfflineAccess(options).then((res: any) => {\n        //   console.log(res);\n        // });\n        auth2.signIn(options).then(handleResponse).catch(handleError)\n      }\n    }, [\n      load,\n      scope,\n      prompt,\n      ux_mode,\n      onReject,\n      handleError,\n      isSdkLoaded,\n      isProcessing,\n      handleResponse\n    ])\n\n    return (\n      <div className={className} onClick={loginGoogle}>\n        {children}\n      </div>\n    )\n  }\n)\n\nexport default LoginSocialGoogle\n","/* eslint-disable camelcase */\n/**\n *\n * LoginSocialGithub\n *\n */\nimport React, { memo, useCallback, useEffect, useState } from 'react'\nimport { IResolveParams, objectType } from '../'\n\ninterface Props {\n  state?: string\n  scope?: string\n  client_id: string\n  className?: string\n  redirect_uri: string\n  client_secret: string\n  allow_signup?: boolean\n  children?: React.ReactNode\n  onReject: (reject: string | objectType) => void\n  onResolve: ({ provider, data }: IResolveParams) => void\n}\n\nconst GITHUB_URL: string = 'https://github.com'\nconst GITHUB_API_URL: string = 'https://api.github.com/'\nconst PREVENT_CORS_URL: string = 'https://cors-anywhere.herokuapp.com'\n\nexport const LoginSocialGithub = memo(\n  ({\n    state = 'DCEeFWf45A53sdfKef424',\n    scope = 'repo,gist',\n    client_id,\n    client_secret,\n    className = '',\n    redirect_uri,\n    allow_signup = false,\n    children,\n    onReject,\n    onResolve\n  }: Props) => {\n    const [isProcessing, setIsProcessing] = useState(false)\n\n    useEffect(() => {\n      if (window.opener && window.opener !== window) {\n        const popupWindowURL = new URL(window.location.href)\n        const code = popupWindowURL.searchParams.get('code')\n        window.opener.postMessage({ type: 'code', code: code }, '*')\n        window.close()\n      }\n      window.addEventListener('message', handlePostMessage)\n      return () => {\n        window.removeEventListener('message', handlePostMessage)\n      }\n    }, [])\n\n    const getProfile = useCallback(\n      (data) => {\n        fetch(`${PREVENT_CORS_URL}/${GITHUB_API_URL}/user`, {\n          method: 'GET',\n          headers: {\n            Authorization: `token ${data.access_token}`\n          }\n        })\n          .then((res) => res.json())\n          .then((response: any) => {\n            setIsProcessing(false)\n            onResolve({ provider: 'github', data: { ...response, ...data } })\n          })\n          .catch((err) => {\n            setIsProcessing(false)\n            onReject(err)\n          })\n      },\n      [onReject, onResolve]\n    )\n\n    const getAccessToken = useCallback(\n      (code: string) => {\n        const params = {\n          code,\n          state,\n          redirect_uri,\n          client_id,\n          client_secret\n        }\n        const headers = new Headers({\n          'Content-Type': 'application/x-www-form-urlencoded'\n        })\n\n        fetch(`${PREVENT_CORS_URL}/${GITHUB_URL}/login/oauth/access_token`, {\n          method: 'POST',\n          headers,\n          body: new URLSearchParams(params)\n        })\n          .then((response) => response.text())\n          .then((response) => {\n            const data: objectType = {}\n            const searchParams: any = new URLSearchParams(response)\n            for (const p of searchParams) {\n              data[p[0]] = p[1]\n            }\n            if (data.access_token) getProfile(data)\n            else {\n              setIsProcessing(false)\n              onReject('no data')\n            }\n          })\n          .catch((err) => {\n            setIsProcessing(false)\n            onReject(err)\n          })\n      },\n      [client_id, client_secret, getProfile, onReject, redirect_uri, state]\n    )\n\n    const handlePostMessage = useCallback(\n      async (event: any) => {\n        console.log(event)\n        if (event.data.type === 'code') {\n          const { code } = event.data\n          code && getAccessToken(code)\n        }\n      },\n      [getAccessToken]\n    )\n\n    const onLogin = useCallback(() => {\n      if (!isProcessing) {\n        setIsProcessing(true)\n        const oauthUrl = `${GITHUB_URL}/login/oauth/authorize?client_id=${client_id}&scope=${scope}&state=${state}&redirect_uri=${redirect_uri}&allow_signup=${allow_signup}`\n        const width = 450\n        const height = 730\n        const left = window.screen.width / 2 - width / 2\n        const top = window.screen.height / 2 - height / 2\n        window.open(\n          oauthUrl,\n          'Github',\n          'menubar=no,location=no,resizable=no,scrollbars=no,status=no, width=' +\n            width +\n            ', height=' +\n            height +\n            ', top=' +\n            top +\n            ', left=' +\n            left\n        )\n      }\n    }, [isProcessing, client_id, scope, state, redirect_uri, allow_signup])\n\n    return (\n      <div className={className} onClick={onLogin}>\n        {children}\n      </div>\n    )\n  }\n)\n\nexport default LoginSocialGithub\n","/**\n *\n * LoginSocialInstagram\n *\n */\nimport React, { memo, useCallback, useEffect, useState } from 'react'\nimport { objectType, IResolveParams } from '../'\n\ninterface Props {\n  scope?: string\n  state?: string\n  client_id: string\n  className?: string\n  client_secret: string\n  redirect_uri: string\n  response_type?: string\n  children?: React.ReactNode\n  onReject: (reject: string | objectType) => void\n  onResolve: ({ provider, data }: IResolveParams) => void\n}\n\nconst INSTAGRAM_URL = 'https://api.instagram.com'\nconst INSTAGRAM_API_URL = 'https://graph.instagram.com/'\nconst PREVENT_CORS_URL: string = 'https://cors-anywhere.herokuapp.com'\n\nexport const LoginSocialInstagram = memo(\n  ({\n    state = 'DCEeFWf45A53sdfKef424',\n    client_id,\n    client_secret,\n    className,\n    redirect_uri,\n    scope = 'user_profile,user_media',\n    response_type = 'code',\n    children,\n    onReject,\n    onResolve\n  }: Props) => {\n    const [isProcessing, setIsProcessing] = useState(false)\n\n    useEffect(() => {\n      if (window.opener && window.opener !== window) {\n        const popupWindowURL = new URL(window.location.href)\n        const code = popupWindowURL.searchParams.get('code')\n        window.opener.postMessage({ type: 'code', code: code }, '*')\n        window.close()\n      }\n      window.addEventListener('message', handlePostMessage)\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const getProfile = useCallback(\n      (data) => {\n        fetch(\n          `${PREVENT_CORS_URL}/${INSTAGRAM_API_URL}/me?fields=id,username&access_token=${data.access_token}`,\n          {\n            method: 'GET'\n          }\n        )\n          .then((res) => res.json())\n          .then((res) => {\n            setIsProcessing(false)\n            onResolve({ provider: 'linkedin', data: { ...res, ...data } })\n          })\n          .catch((err) => {\n            setIsProcessing(false)\n            onReject(err)\n          })\n      },\n      [onReject, onResolve]\n    )\n\n    const getAccessToken = useCallback(\n      (code: string) => {\n        const params = {\n          grant_type: 'authorization_code',\n          code,\n          redirect_uri,\n          client_id,\n          client_secret\n        }\n        const headers = new Headers({\n          'Content-Type': 'application/x-www-form-urlencoded'\n        })\n        fetch(`${PREVENT_CORS_URL}/${INSTAGRAM_URL}/oauth/access_token`, {\n          method: 'POST',\n          headers,\n          body: new URLSearchParams(params)\n        })\n          .then((response) => response.json())\n          .then((data) => {\n            if (data.access_token) getProfile(data)\n            else {\n              setIsProcessing(false)\n              onReject('no data')\n            }\n          })\n          .catch((err) => {\n            setIsProcessing(false)\n            onReject(err)\n          })\n      },\n      [client_id, client_secret, getProfile, onReject, redirect_uri]\n    )\n\n    const handlePostMessage = useCallback(\n      async (event: any) => {\n        if (event.data.type === 'code') {\n          window.removeEventListener('message', handlePostMessage)\n          const { code } = event.data\n          code && getAccessToken(code)\n        }\n      },\n      [getAccessToken]\n    )\n\n    const onLogin = useCallback(() => {\n      if (!isProcessing) {\n        setIsProcessing(true)\n        const oauthUrl = `${INSTAGRAM_URL}/oauth/authorize?response_type=${response_type}&client_id=${client_id}&scope=${scope}&state=${state}&redirect_uri=${redirect_uri}`\n        const width = 450\n        const height = 730\n        const left = window.screen.width / 2 - width / 2\n        const top = window.screen.height / 2 - height / 2\n        window.open(\n          oauthUrl,\n          'Instagram',\n          'menubar=no,location=no,resizable=no,scrollbars=no,status=no, width=' +\n            width +\n            ', height=' +\n            height +\n            ', top=' +\n            top +\n            ', left=' +\n            left\n        )\n      }\n    }, [isProcessing, client_id, redirect_uri, response_type, scope, state])\n\n    return (\n      <div className={className} onClick={onLogin}>\n        {children}\n      </div>\n    )\n  }\n)\n\nexport default LoginSocialInstagram\n","/**\n *\n * LoginSocialMicrosoft\n *\n */\nimport React, { memo, useCallback, useEffect, useState } from 'react'\nimport { IResolveParams, objectType } from '../'\n\ninterface Props {\n  scope?: string\n  state?: string\n  client_id: string\n  className?: string\n  redirect_uri: string\n  response_type?: string\n  response_mode?: string\n  code_challenge?: string\n  children?: React.ReactNode\n  onReject: (reject: string | objectType) => void\n  code_challenge_method?: 'plain' | 's256'[]\n  onResolve: ({ provider, data }: IResolveParams) => void\n  tenant?: 'common' | 'organizations' | 'consumers'\n  prompt?: 'login' | 'none' | 'consent' | 'select_account'\n}\n\nconst MICROSOFT_URL = 'https://login.microsoftonline.com'\nconst MICROSOFT_API_URL = 'https://graph.microsoft.com'\n// const PREVENT_CORS_URL: string = 'https://cors-anywhere.herokuapp.com';\n\nexport const LoginSocialMicrosoft = memo(\n  ({\n    tenant = 'common',\n    state = 'DCEeFWf45A53sdfKef424',\n    client_id,\n    className,\n    redirect_uri,\n    scope = 'profile openid email',\n    response_type = 'code',\n    response_mode = 'query',\n    children,\n    code_challenge = '19cfc47c216dacba8ca23eeee817603e2ba34fe0976378662ba31688ed302fa9',\n    code_challenge_method = 'plain',\n    prompt = 'select_account',\n    onReject,\n    onResolve\n  }: Props) => {\n    const [isProcessing, setIsProcessing] = useState(false)\n\n    useEffect(() => {\n      if (window.opener && window.opener !== window) {\n        const popupWindowURL = new URL(window.location.href)\n        const code = popupWindowURL.searchParams.get('code')\n        window.opener.postMessage({ type: 'code', code: code }, '*')\n        window.close()\n      }\n      window.addEventListener('message', handlePostMessage)\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const getProfile = useCallback(\n      (data) => {\n        fetch(`${MICROSOFT_API_URL}/v1.0/me`, {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${data.access_token}`\n          }\n        })\n          .then((res) => res.json())\n          .then((res) => {\n            setIsProcessing(false)\n            onResolve({ provider: 'microsoft', data: { ...res, ...data } })\n          })\n          .catch((err) => {\n            setIsProcessing(false)\n            onReject(err)\n          })\n      },\n      [onReject, onResolve]\n    )\n\n    const getAccessToken = useCallback(\n      (code: string) => {\n        const params = {\n          code,\n          scope,\n          client_id,\n          redirect_uri,\n          code_verifier: code_challenge,\n          grant_type: 'authorization_code'\n        }\n        const headers = new Headers({\n          'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n        })\n        fetch(`${MICROSOFT_URL}/${tenant}/oauth2/v2.0/token`, {\n          method: 'POST',\n          headers,\n          body: new URLSearchParams(params)\n        })\n          .then((response) => response.json())\n          .then((data) => {\n            if (data.access_token) getProfile(data)\n            else {\n              setIsProcessing(false)\n              onReject('no data')\n            }\n          })\n          .catch((err) => {\n            setIsProcessing(false)\n            onReject(err)\n          })\n      },\n      [\n        scope,\n        tenant,\n        onReject,\n        client_id,\n        getProfile,\n        redirect_uri,\n        code_challenge\n      ]\n    )\n\n    const handlePostMessage = useCallback(\n      async (event: any) => {\n        if (event.data.type === 'code') {\n          window.removeEventListener('message', handlePostMessage)\n          const { code } = event.data\n          code && getAccessToken(code)\n        }\n      },\n      [getAccessToken]\n    )\n\n    const onLogin = useCallback(() => {\n      if (!isProcessing) {\n        setIsProcessing(true)\n        const oauthUrl = `${MICROSOFT_URL}/${tenant}/oauth2/v2.0/authorize?client_id=${client_id}\n        &response_type=${response_type}\n        &redirect_uri=${redirect_uri}\n        &response_mode=${response_mode}\n        &scope=${scope}\n        &state=${state}\n        &prompt=${prompt}\n        &code_challenge=${code_challenge}\n        &code_challenge_method=${code_challenge_method}`\n        const width = 450\n        const height = 730\n        const left = window.screen.width / 2 - width / 2\n        const top = window.screen.height / 2 - height / 2\n        window.open(\n          oauthUrl,\n          'Microsoft',\n          'menubar=no,location=no,resizable=no,scrollbars=no,status=no, width=' +\n            width +\n            ', height=' +\n            height +\n            ', top=' +\n            top +\n            ', left=' +\n            left\n        )\n      }\n    }, [\n      scope,\n      state,\n      tenant,\n      prompt,\n      client_id,\n      isProcessing,\n      redirect_uri,\n      response_mode,\n      response_type,\n      code_challenge,\n      code_challenge_method\n    ])\n\n    return (\n      <div className={className} onClick={onLogin}>\n        {children}\n      </div>\n    )\n  }\n)\n\nexport default LoginSocialMicrosoft\n","/**\n *\n * LoginSocialLinkedin\n *\n */\nimport React, { memo, useCallback, useEffect, useState } from 'react'\nimport { IResolveParams, objectType } from '../'\n\ninterface Props {\n  state?: string\n  scope?: string\n  client_id: string\n  className?: string\n  redirect_uri: string\n  client_secret: string\n  response_type?: string\n  children?: React.ReactNode\n  onReject: (reject: string | objectType) => void\n  onResolve: ({ provider, data }: IResolveParams) => void\n}\n\nconst LINKEDIN_URL: string = 'https://www.linkedin.com'\nconst LINKEDIN_API_URL: string = 'https://api.linkedin.com'\nconst PREVENT_CORS_URL: string = 'https://cors-anywhere.herokuapp.com'\n\nexport const LoginSocialLinkedin = memo(\n  ({\n    state = 'DCEeFWf45A53sdfKef424',\n    scope = 'r_liteprofile',\n    client_id,\n    client_secret,\n    className = '',\n    redirect_uri,\n    response_type = 'code',\n    children,\n    onReject,\n    onResolve\n  }: Props) => {\n    const [isProcessing, setIsProcessing] = useState(false)\n\n    useEffect(() => {\n      if (window.opener && window.opener !== window) {\n        const popupWindowURL = new URL(window.location.href)\n        const code = popupWindowURL.searchParams.get('code')\n        window.opener.postMessage({ type: 'code', code: code }, '*')\n        window.close()\n      }\n      window.addEventListener('message', handlePostMessage)\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const getProfile = useCallback(\n      (data) => {\n        fetch(`${PREVENT_CORS_URL}/${LINKEDIN_API_URL}/v2/me`, {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${data.access_token}`\n          }\n        })\n          .then((res) => res.json())\n          .then((res) => {\n            setIsProcessing(false)\n            onResolve({ provider: 'linkedin', data: { ...res, ...data } })\n          })\n          .catch((err) => {\n            setIsProcessing(false)\n            onReject(err)\n          })\n      },\n      [onReject, onResolve]\n    )\n\n    const getAccessToken = useCallback(\n      (code: string) => {\n        const params = {\n          grant_type: 'authorization_code',\n          code,\n          redirect_uri,\n          client_id,\n          client_secret\n        }\n        const headers = new Headers({\n          'Content-Type': 'application/x-www-form-urlencoded'\n        })\n\n        fetch(`${PREVENT_CORS_URL}/${LINKEDIN_URL}/oauth/v2/accessToken`, {\n          method: 'POST',\n          headers,\n          body: new URLSearchParams(params)\n        })\n          .then((response) => response.json())\n          .then((data) => {\n            if (data.access_token) getProfile(data)\n            else {\n              setIsProcessing(false)\n              onReject('no data')\n            }\n          })\n          .catch((err) => {\n            setIsProcessing(false)\n            onReject(err)\n          })\n      },\n      [client_id, client_secret, getProfile, onReject, redirect_uri]\n    )\n\n    const handlePostMessage = useCallback(\n      async (event: any) => {\n        if (event.data.type === 'code') {\n          window.removeEventListener('message', handlePostMessage)\n          const { code } = event.data\n          code && getAccessToken(code)\n        }\n      },\n      [getAccessToken]\n    )\n\n    const onLogin = useCallback(() => {\n      if (!isProcessing) {\n        setIsProcessing(true)\n        const oauthUrl = `${LINKEDIN_URL}/oauth/v2/authorization?response_type=${response_type}&client_id=${client_id}&scope=${scope}&state=${state}&redirect_uri=${redirect_uri}`\n        const width = 450\n        const height = 730\n        const left = window.screen.width / 2 - width / 2\n        const top = window.screen.height / 2 - height / 2\n        window.open(\n          oauthUrl,\n          'Linkedin',\n          'menubar=no,location=no,resizable=no,scrollbars=no,status=no, width=' +\n            width +\n            ', height=' +\n            height +\n            ', top=' +\n            top +\n            ', left=' +\n            left\n        )\n      }\n    }, [isProcessing, client_id, redirect_uri, response_type, scope, state])\n\n    return (\n      <div className={className} onClick={onLogin}>\n        {children}\n      </div>\n    )\n  }\n)\n\nexport default LoginSocialLinkedin\n","import React from 'react'\nimport './app.css'\nimport {\n  LoginSocialGoogle,\n  LoginSocialAmazon,\n  LoginSocialFacebook,\n  LoginSocialGithub,\n  LoginSocialInstagram,\n  LoginSocialLinkedin,\n  LoginSocialMicrosoft\n} from 'reactjs-social-login'\n\nconst REDIRECT_URI = 'https://reactjs-social-login.netlify.app/account/login'\n\nconst App = () => {\n  console.log(process.env.FB_APP_ID)\n  return (\n    <div>\n      <LoginSocialFacebook\n        appId={process.env.FB_APP_ID || ''}\n        onResolve={({ data }) => {\n          console.log(data)\n        }}\n        onReject={() => {}}\n        className={'storybook-button storybook-button--primary'}\n      >\n        <span>Facebook</span>\n      </LoginSocialFacebook>\n\n      <LoginSocialGoogle\n        client_id={process.env.GG_APP_ID || ''}\n        onResolve={({ data }) => {\n          console.log(data)\n        }}\n        onReject={() => {}}\n        className={'storybook-button storybook-button--primary'}\n      >\n        <span>Google</span>\n      </LoginSocialGoogle>\n\n      <LoginSocialAmazon\n        client_id={process.env.AMAZON_APP_ID || ''}\n        className={'storybook-button storybook-button--primary'}\n        redirect_uri={REDIRECT_URI}\n        onResolve={({ provider, data }) => {\n          console.log(provider)\n          console.log(data)\n        }}\n        onReject={(err) => {\n          console.log(err)\n        }}\n      >\n        Login Amazon\n      </LoginSocialAmazon>\n\n      <LoginSocialInstagram\n        client_id={process.env.INSTAGRAM_APP_ID || ''}\n        client_secret={process.env.INSTAGRAM_APP_SECRET || ''}\n        className={'storybook-button storybook-button--primary'}\n        redirect_uri={REDIRECT_URI}\n        onResolve={({ provider, data }) => {\n          console.log(provider)\n          console.log(data)\n        }}\n        onReject={(err) => {\n          console.log(err)\n        }}\n      >\n        Login Instagram\n      </LoginSocialInstagram>\n\n      <LoginSocialMicrosoft\n        // client_secret: 50.41O-kG_igQar-C8wH2uvhkxn026LoVx\n        client_id={process.env.MICROSOFT_APP_ID || ''}\n        className={'storybook-button storybook-button--primary'}\n        redirect_uri={REDIRECT_URI}\n        onResolve={({ provider, data }) => {\n          console.log(provider)\n          console.log(data)\n        }}\n        onReject={(err) => {\n          console.log(err)\n        }}\n      >\n        Login Microsoft\n      </LoginSocialMicrosoft>\n\n      <LoginSocialLinkedin\n        client_id={process.env.LINKEDIN_APP_ID || ''}\n        client_secret={process.env.LINKEDIN_APP_SECRET || ''}\n        className={'storybook-button storybook-button--primary'}\n        redirect_uri={REDIRECT_URI}\n        onResolve={({ provider, data }) => {\n          console.log(provider)\n          console.log(data)\n        }}\n        onReject={(err) => {\n          console.log(err)\n        }}\n      >\n        Login Linkedin\n      </LoginSocialLinkedin>\n\n      <LoginSocialGithub\n        client_id={process.env.GITHUB_APP_ID || ''}\n        client_secret={process.env.GITHUB_APP_SECRET || ''}\n        className={'storybook-button storybook-button--primary'}\n        redirect_uri={REDIRECT_URI}\n        onResolve={({ provider, data }) => {\n          console.log(provider)\n          console.log(data)\n        }}\n        onReject={(err) => {\n          console.log(err)\n        }}\n      >\n        Login Github\n      </LoginSocialGithub>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}